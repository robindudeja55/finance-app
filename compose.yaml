services:
  db:
    image: mysql:8.4
    container_name: finance_db
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 25

  redis:
    image: redis:7.2-alpine
    container_name: finance_redis
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 25

  worker:
    build:
      context: ./backend
    container_name: finance_worker
    command: celery -A config worker -l info
    volumes:
      - ./backend:/app
      - ./.env:/app/.env:ro
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
    build:
      context: ./backend
    container_name: finance_web
    command: bash -lc "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - ./.env:/app/.env:ro
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    stdin_open: true
    tty: true

  beat:
    build:
      context: ./backend
    container_name: finance_beat
    command: celery -A config beat -l info
    volumes:
      - ./backend:/app
      - ./.env:/app/.env:ro
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  mysql_data: